name: Codegen check

on: [ pull_request ]

permissions:
  contents: read

jobs:
  codegen_check:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    defaults:
      run:
        shell: bash

    steps:
      - name: Run Cimon (eBPF).
        if: runner.os == 'Linux'
        uses: cycodelabs/cimon-action@v0
        with:
          client-id: ${{ secrets.CIMON_CLIENT_ID }}
          secret: ${{ secrets.CIMON_SECRET }}
          prevent: true
          allowed-hosts: >
            files.pythonhosted.org
            install.python-poetry.org
            pypi.org

      - name: Checkout repository.
        uses: actions/checkout@v4

      - name: Set up Python.
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Setup Poetry.
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1

      - name: Install dependencies.
        run: poetry install --no-interaction

      - name: Run codegen.
        run: poetry run atproto gen all

      - name: Run docs gen.
        if: runner.os == 'Linux'
        run: |
          source $(poetry env info -p)/bin/activate
          make -s -C docs gen

      - name: Check working directory is clean.
        run: git diff --exit-code
